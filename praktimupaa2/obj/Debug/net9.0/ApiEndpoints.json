[
  {
    "ContainingType": "praktimupaa2.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "bangunin/v1/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginData",
        "Type": "praktimupaa2.Models.Login.Auth",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "bangunin/v1/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerData",
        "Type": "praktimupaa2.Models.Person.Person",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.CategoryController",
    "Method": "GetCategory",
    "RelativePath": "bangunin/v1/Category",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "praktimupaa2.Models.Category.Category",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "praktimupaa2.Controllers.CategoryController",
    "Method": "CreateCategory",
    "RelativePath": "bangunin/v1/Category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "praktimupaa2.Models.Category.Category",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.CategoryController",
    "Method": "UpdateCategory",
    "RelativePath": "bangunin/v1/Category/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "category",
        "Type": "praktimupaa2.Models.Category.Category",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.CategoryController",
    "Method": "DeleteCategory",
    "RelativePath": "bangunin/v1/Category/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.PersonController",
    "Method": "getPersonWithAuth",
    "RelativePath": "bangunin/v1/Person",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "praktimupaa2.Models.Person.Person",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "praktimupaa2.Controllers.ProductController",
    "Method": "GetProducts",
    "RelativePath": "bangunin/v1/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "praktimupaa2.Models.Product.Product",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "praktimupaa2.Controllers.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "bangunin/v1/Product",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "product",
        "Type": "praktimupaa2.Models.Product.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.ProductController",
    "Method": "GetProductById",
    "RelativePath": "bangunin/v1/Product/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "praktimupaa2.Models.Product.Product",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "praktimupaa2.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "bangunin/v1/Product/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "product",
        "Type": "praktimupaa2.Models.Product.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "bangunin/v1/Product/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "praktimupaa2.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[praktimupaa2.WeatherForecast, praktimupaa2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]